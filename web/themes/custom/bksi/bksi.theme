<?php

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bksi_theme_suggestions_block_alter(array &$suggestions, array $variables)
{
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bksi_theme_suggestions_image_alter(array &$suggestions, array $variables)
{
  $suggestions[] = 'image' . '__company_detail';
  $suggestions[] = 'image' . '__team-gallery';
}


function bksi_preprocess_node(&$variables)
{
  $node = $variables['node'];
  $type = $node->getType();
  $nid = $node->id();
  switch ($type) {
    case "job":
      $form = \Drupal::formBuilder()->getForm('Drupal\bksi_contact_form\Form\ContactForm');

      $form['node_id'] = [
        '#name' => 'node_id',
        '#value' => $nid,
        '#type' => 'hidden',
      ];

      $variables['contact_form'] = $form;
      $variables['#attached']['library'][] = 'bksi/jobs-form-js';
      break;

    case "project":
      $variables['#attached']['library'][] = 'bksi/random-projects-js';
      break;
  }
}
/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

/**
 * @param $suggestions
 * @param array $variables
 */
function bksi_theme_suggestions_input_alter(&$suggestions, array $variables)
{
  $element = $variables['element'];

  //remove button
  if ($element['#name'] == 'file_remove_button') {
    $replaced = str_replace("_", "__", $element['#name']);
    $suggestions[] = 'input__' . $replaced;
  }

  //file select checkbox
  else if (str_starts_with($element['#id'], 'edit-file-file-')) {
    $replaced = str_replace("_", "__", $element['#type']);
    $suggestions[] = 'input__' . $replaced . '__' . 'edit__file__file';
  }
}

/**
 * @param array $suggestions
 * @param array $variables
 * @param $hook
 */
function bksi_theme_suggestions_form_element_alter(array &$suggestions, array $variables, $hook)
{
  if (isset($variables['element']['#id']) && str_starts_with($variables['element']['#id'], 'edit-file-file-')) {
    $id = str_replace("-", "_", $variables['element']['#id']);
    $suggestions[] = $hook . '__' . 'attached__file';
  }
}

// Create preprocess hook for image field template to get "uri" , "width", "height", "alt" etc.
// For more information see template_preprocess_image function
/**
 * @param $variables
 * @return void
 */
function bksi_theme_preprocess_image(&$variables) {
  if (!empty($variables['uri'])) {
    $variables['attributes']['src'] =  \Drupal::service('file_url_generator')->generateString($variables['uri']);
  }

  // Generate a srcset attribute conforming to the spec at
  // http://www.w3.org/html/wg/drafts/html/master/embedded-content.html#attr-img-srcset
  if (!empty($variables['srcset'])) {
    $srcset = [];
    foreach ($variables['srcset'] as $src) {

      // URI is mandatory.
      $source = \Drupal::service('file_url_generator')->generateString($src['uri']);
      if (isset($src['width']) && !empty($src['width'])) {
        $source .= ' ' . $src['width'];
      }
      elseif (isset($src['multiplier']) && !empty($src['multiplier'])) {
        $source .= ' ' . $src['multiplier'];
      }
      $srcset[] = $source;
    }
    $variables['attributes']['srcset'] = implode(', ', $srcset);
  }
  foreach ([
             'width',
             'height',
             'alt',
             'title',
             'sizes',
           ] as $key) {
    if (isset($variables[$key])) {

      // If the property has already been defined in the attributes,
      // do not override, including NULL.
      if (AttributeHelper::attributeExists($key, $variables['attributes'])) {
        continue;
      }
      $variables['attributes'][$key] = $variables[$key];
    }
  }

  // Without dimensions specified, layout shifts can occur,
  // which are more noticeable on pages that take some time to load.
  // As a result, only mark images as lazy load that have dimensions.
  if (isset($variables['width'], $variables['height']) && !isset($variables['attributes']['loading'])) {
    $variables['attributes']['loading'] = 'lazy';
  }
}